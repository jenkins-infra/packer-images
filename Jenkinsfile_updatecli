def cronExpr = env.BRANCH_IS_PRIMARY ? 'H/30 * * * *' : ''

pipeline {
  agent {
    docker { image 'jenkinsciinfra/helmfile:2.5.92' }
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    timeout(time: 30, unit: 'MINUTES')
    disableConcurrentBuilds()
  }

  triggers {
    cron (cronExpr)
  }

  stages {
    stage('Check Configuration Update') {
      // Run updatecli's diff on both push and pull requests (in case a configuration change breaks updatecli)
      steps {
        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
          updatecli(action: 'diff', cronTriggerExpression: cronExpr)
        }
      }
    } // stage
    stage('Apply Configuration Update') {
      when {
        expression { env.BRANCH_IS_PRIMARY }
      }
      steps {
        updatecli(action: 'apply', cronTriggerExpression: cronExpr)
      }
    }
  }
}
