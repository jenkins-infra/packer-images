def flagRunUpdatecli

// returns a list of changed files using git diff to get all changes not only last commit ones
List<String> getChangedFilesList() {
    def changedFiles = []

    node {
        checkout scm
        def gitDiffCommand = "git diff --name-only origin/${env.CHANGE_TARGET}...HEAD"
        def output = sh(script: gitDiffCommand, returnStdout: true).trim()
        if (output) {
            changedFiles = output.split("\n")
        }
        println "Changed files: ${changedFiles}" //debug
    }

    return changedFiles
}

stage('Which files') {
    flagRunUpdatecli = false

    if (env.BRANCH_IS_PRIMARY) {
        flagRunUpdatecli = true
    } else {
        def filelist = getChangedFilesList()  // Get all changed files
        echo "============= The list: ${filelist}"

        // Check if any changed file contains 'updatecli'
        if (filelist.any { it.contains('updatecli') }) {
            flagRunUpdatecli = true
        }
    }
}

stage('UpdateCli') {
    if (flagRunUpdatecli || pullRequest.labels.contains('run-updatecli')) {
        withCredentials([
            azureServicePrincipal('updatecli-azure-serviceprincipal'),
            string(credentialsId: 'updatecli-aws-access-key-id', variable: 'AWS_ACCESS_KEY_ID'),
            string(credentialsId: 'updatecli-aws-secret-access-key', variable: 'AWS_SECRET_ACCESS_KEY')
        ]) {
            currentBuild.result = 'ABORTED'
            error('Stopping early as WIP')
            // if (env.BRANCH_IS_PRIMARY) {
            //     updatecli(action: 'apply', updatecliAgentLabel: 'linux-amd64-docker', cronTriggerExpression: '@daily')
            // } else {
            //     updatecli(action: 'diff', updatecliAgentLabel: 'linux-amd64-docker')
            // }
        }
    }
}
