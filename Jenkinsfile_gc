pipeline {
    agent {
        label "linux-arm64-docker"
    }
    triggers {
        cron('@hourly')
    }
    stages {
        stage('Garbage Collection') {
            parallel {
                stage('GC on Azure') {
                    environment {
                        PACKER_AZURE = credentials('packer-azure-serviceprincipal-sponsorship')
                    }
                    steps {
                        sh 'az login --service-principal -u "$PACKER_AZURE_CLIENT_ID" -p "$PACKER_AZURE_CLIENT_SECRET" -t "$PACKER_AZURE_TENANT_ID"'
                        sh 'az account set -s "$PACKER_AZURE_SUBSCRIPTION_ID"'
                        sh './cleanup/azure_gallery_images.sh 1 dev'
                        sh './cleanup/azure_gallery_images.sh 7 staging'
                        sh './cleanup/azure.sh 1 dev'
                        sh './cleanup/azure.sh 1 staging'
                        sh './cleanup/azure.sh 1 prod'
                    }
                }
                stage('GC on AWS us-east-2') {
                    environment {
                        DRYRUN                = "${env.BRANCH_NAME == 'main' ? 'false' : 'true'}"
                        AWS_ACCESS_KEY_ID     = credentials('packer-aws-access-key-id')
                        AWS_SECRET_ACCESS_KEY = credentials('packer-aws-secret-access-key')
                        AWS_DEFAULT_REGION    = 'us-east-2'
                    }
                    steps {
                        sh 'bash ./cleanup/aws.sh'
                        sh './cleanup/aws_images.sh 1 dev'
                        sh './cleanup/aws_images.sh 7 staging'
                        sh './cleanup/aws_images.sh 60 prod'
                        sh './cleanup/aws_snapshots.sh'
                        }
                    }
                }
            }
        }
    }
